<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnReg2serv.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>